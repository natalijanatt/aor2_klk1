library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

entity orGate is
    port(
        A, B: in std_logic;
        Y: out std_logic
    );
end entity orGate;

architecture orGate_a of orGate is
begin
    Y <= A or B;
end architecture orGate_a;

library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

entity xorGate is
    port(
        A, B: in std_logic;
        Y: out std_logic
    );
end entity xorGate;

architecture xorGate_a of xorGate is
begin
    Y <= A xor B;
end architecture xorGate_a;

library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

entity sta is
    generic(
        n: INTEGER := 5
    );
    port(
        a, b: in std_logic_vector(n-1 downto 0);
        cin: in std_logic;
        d: out std_logic_vector(n-1 downto 0)
    );
end entity sta;

architecture sta_arch of sta is
    signal c: std_logic_vector(n-1 downto 0);
begin
    c(0) <= cin;
labela: 
    for i in 0 to n-1 generate
        signal x: std_logic;
    begin
        U1: entity work.xorGate(xorGate_a)
            port map(
                A => a(i),
                B => b(i),
                Y => x
            );
        U2: entity work.orGate(orGate_a)
            port map(
                A => x,
                B => c(i),
                Y => d(i)
            );
        c(i+1) <= d(i);
    end generate labela;
end architecture sta_arch;

library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

entity tb is
    generic(
        n: INTEGER := 5
    );
end entity tb;

architecture tb of tb is
    signal a: std_logic_vector(n-1 downto 0);
    signal b: std_logic_vector(n-1 downto 0);
    signal d: std_logic_vector(n-1 downto 0);
    signal cin: std_logic := '0'; 
  --  signal clk: std_logic := '0';
begin
    UUT: entity work.sta(sta_arch)
        generic map(n => n)
        port map(
            a => a,
            b => b,
            cin => cin,
            d => d
        );

    stimuli: process
    begin
        a <= "01010";
        b <= "11000";
        cin <= '1'; 
        wait for 10 ns;
        a <= "11010";
        b <= "01000";
        cin <= '0';
        wait;
    end process stimuli;
    
   -- clk <= not clk after 2 ns;
end architecture tb;
